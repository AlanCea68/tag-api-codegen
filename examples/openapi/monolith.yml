openapi: 3.0.1
info:
    title: Ada Api
    version: 1.0.0
servers:
    - url: https://api.dev.alldataapp.com/
tags:
    - name: Authentication Service
      description: Operations for user authentication
    - name: Vin Profile Service
      description: VIN Profile operations
    - name: Policy Service
      description: Policy creation operations
    - name: On Demand Service
      description: Operations for sending policies to vehicles
    - name: Histogram Service
      description: Histogram operations
    - name: Sensor Service
      description: Sensor operations
    - name: User Management Service
      description: User operations
    - name: Synthetic Service
      description: Synthetic operations
x-amazon-apigateway-api-key-source: HEADER
paths:
    /v1/admin/ada-cost-calc:
        post:
            responses:
                "200":
                    description: 200 response
                    content: {}
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/admin/process/smart-trac-ftp-file:
        get:
            responses:
                "200":
                    description: 200 response
                    content: {}
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/auth/token:
        post:
            operationId: postAuthToken
            summary: Retrieve the bearer token
            tags:
                - Authentication Service
            parameters:
                - name: code
                  in: query
                  schema:
                      type: string
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PostTokenResponse"
            security:
                - api_key: []
                - basic_auth: []
    /v1/docs/openapi:
        get:
            operationId: getApi
            responses:
                "200":
                    description: 200 response
                    content: {}
            security:
                - api_key: []
    /v1/user/group:
        get:
            operationId: getGroups
            summary: Get all groups
            tags:
                - User Management Service
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetGroupsResponse"
        post:
            operationId: createGroup
            summary: Creates a new group
            tags:
                - User Management Service
            requestBody:
                description: The search request payload.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateGroupRequest"
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Role"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/user/group/iam-policy:
        get:
            operationId: getIamPolicies
            summary: Get all policies associated with ADA groups/roles
            tags:
                - User Management Service
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetIamPoliciesReponse"
    /v1/user/group/{groupId}/{userId}:
        delete:
            operationId: deleteUserFromGroup
            summary: Remove user from a group
            tags:
                - User Management Service
            parameters:
                - name: groupId
                  in: path
                  required: true
                  schema:
                      type: string
                - name: userId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    groupId:
                                        type: string
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/user/group/{groupId}:
        post:
            operationId: addUserToGroup
            summary: Add a user to a group
            tags:
                - User Management Service
            parameters:
                - name: groupId
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                description: The request payload
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                userId:
                                    type: string
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    groupId:
                                        type: string
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/user/search:
        post:
            operationId: searchUsers
            summary: Search users
            tags:
                - User Management Service
            requestBody:
                description: The search request payload.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SearchRequest"
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/UserSearchResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/user/me:
        get:
            operationId: getMe
            summary: Get the user data of the calling user
            tags:
                - User Management Service
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/user:
        post:
            operationId: createUser
            summary: Create a single user
            tags:
                - User Management Service
            requestBody:
                description: The create user payload.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateUserRequest"
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/user/{userId}:
        get:
            operationId: getUser
            summary: Get a single user
            tags:
                - User Management Service
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/user/{userId}/group:
        get:
            operationId: getUserGroups
            summary: Get all groups that a user belongs to
            tags:
                - User Management Service
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetGroupsResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/policy:
        post:
            operationId: createPolicy
            summary: Create a new policy
            tags:
                - Policy Service
            requestBody:
                description: Policy definition
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreatePolicyRequest"
                required: true
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/AdaJsonPolicy"
                                    - $ref: "#/components/schemas/AdaProtobufPolicy"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
            x-codegen-request-body-name: body
        patch:
            operationId: updatePolicy
            summary: Edit the name and feature of a policy
            tags:
                - Policy Service
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdatePolicyRequest"
                required: true
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BatchPolicyOperationResultResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
            x-codegen-request-body-name: body
    /v1/policy/{id}:
        get:
            operationId: getPolicy
            summary: Get a single policy
            tags:
                - Policy Service
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - $ref: "#/components/schemas/AdaJsonPolicy"
                                    - $ref: "#/components/schemas/AdaProtobufPolicy"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/policy/merge:
        post:
            operationId: mergePolicy
            responses:
                "200":
                    description: 200 response
                    content: {}
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/policy/remerge:
        post:
            operationId: remergePolicy
            x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                    Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PolicyReMergeLambda.Arn}/invocations
            responses:
                200:
                    description: 200 response
                    content: {}
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/policy/search:
        post:
            operationId: searchPolicies
            summary: Search the policies table
            tags:
                - Policy Service
            requestBody:
                description: The search request payload.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SearchRequest"
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/PolicySearchResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/vin/search:
        post:
            operationId: searchVins
            summary: Search the vin profile table
            tags:
                - Vin Profile Service
            requestBody:
                description: The search request payload.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SearchRequest"
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/VinSearchResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/vin/features:
        post:
            operationId: createVinFeatures
            summary: Create vehicle features
            tags:
                - Vin Profile Service
            requestBody:
                description: The feature creation request.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateVinFeaturesRequest"
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BatchVinOperationResultResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
        patch:
            operationId: updateVinFeatures
            summary: Update vehicle features
            tags:
                - Vin Profile Service
            requestBody:
                description: The feature update request.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateVinFeaturesRequest"
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BatchVinOperationResultResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/vin/policy/assign:
        post:
            operationId: assignPolicies
            summary: Assign policies to multiple vins
            tags:
                - Vin Profile Service
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AssignPolicyRequest"
                required: true
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BatchVinOperationResultResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/vin/policy/refresh:
        post:
            operationId: refreshPolicies
            summary: Refresh the policy used by the provided vins
            tags:
                - Vin Profile Service
            requestBody:
                description: The refresh policy request payload
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                                example: EXAMPLEVIN123
                            maxLength: 100
                required: true
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BatchVinOperationResultResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/vin/policy/schedule:
        post:
            operationId: schedulePolicies
            summary: Schedule a policy to run for provided vins
            tags:
                - Vin Profile Service
            requestBody:
                description: The schedule request payload.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PolicyVinRequest"
                required: true
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SingleVinOperationResultResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/vin/policy/unschedule:
        post:
            operationId: unschedulePolicies
            summary: Unschedule policies for all provided vins
            tags:
                - Vin Profile Service
            requestBody:
                description: List of vins to toggle scheduling
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                                example: EXAMPLEVIN123
                required: true
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/SingleVinOperationResultResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/vin/{vin}:
        get:
            operationId: getVin
            summary: Get the details of this vin profile
            tags:
                - Vin Profile Service
            parameters:
                - name: vin
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/VinProfile"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
        patch:
            operationId: updateVin
            summary: Update this vin
            tags:
                - Vin Profile Service
            parameters:
                - name: vin
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                description: The vin profile update request payload
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateVinProfileRequest"
                required: true
            responses:
                "200":
                    description: 200 response
                    content: {}
            security:
                - AdaApiAuthorizer: []
                - api_key: []
            x-codegen-request-body-name: body
    /v1/vin/{vin}/schedule:
        get:
            operationId: getVinSchedules
            summary: Gets the scheduled policy for this vin
            tags:
                - Vin Profile Service
            parameters:
                - name: vin
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetVinScheduleResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/vin/{vin}/data/lastknown:
        get:
            operationId: getVinLastKnown
            summary: Gets the last known data for this vin
            tags:
                - Vin Profile Service
            parameters:
                - name: vin
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetVinLastKnownResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/vin/{vin}/data:
        get:
            operationId: getVinData
            summary: Gets 24 hour data for this vin
            tags:
                - Vin Profile Service
            parameters:
                - name: vin
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetVinDataResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/sensor:
        get:
            operationId: getSensors
            summary: Gets all sensors
            tags:
                - Sensor Service
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetSensorsResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/histogram:
        get:
            operationId: getHistograms
            summary: Gets all histograms
            tags:
                - Histogram Service
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetHistogramsResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
        post:
            operationId: createHistogram
            summary: Create a new histogram
            tags:
                - Histogram Service
            requestBody:
                description: The on demand request payload
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateHistogramRequest"
                required: true
            responses:
                "200":
                    description: 200 response
                    content: {}
            security:
                - AdaApiAuthorizer: []
                - api_key: []
            x-codegen-request-body-name: body
    /v1/histogram/{histogramId}:
        get:
            operationId: getHistogram
            summary: Get a single histogram
            tags:
                - Histogram Service
            parameters:
                - name: histogramId
                  in: path
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Histogram"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/witech:
        post:
            responses:
                "200":
                    description: 200 response
                    content: {}
            security:
                - AdaApiAuthorizer: []
                - api_key: []
    /v1/ondemand:
        post:
            operationId: sendOnDemandPolicy
            summary: Send a one-time policy for multiple vins
            tags:
                - On Demand Service
            requestBody:
                description: The on demand request payload
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/OnDemandRequest"
                required: true
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BatchVinOperationResultResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
            x-codegen-request-body-name: body
    /v1/ondemand/live:
        post:
            operationId: sendLivePolicy
            summary: "Send a single policy plan"
            requestBody:
                description: The on demand request payload
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SendLivePolicyRequest"
            security:
                - AdaApiAuthorizer: []
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                type: integer
            tags:
                - On Demand Service
    /v1/synthetic:
        get:
            operationId: getSynthetics
            summary: Gets all synthetics
            tags:
                - Synthetic Service
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/GetSyntheticsResponse"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
        post:
            operationId: createSynthetic
            summary: Create a new synthetic
            tags:
                - Synthetic Service
            requestBody:
                description: The request payload
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateSyntheticRequest"
                required: true
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Synthetic"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
            x-codegen-request-body-name: body
    /v1/synthetic/{syntheticId}:
        get:
            operationId: getSynthetic
            summary: Get a single synthetic
            tags:
                - Synthetic Service
            parameters:
                - name: syntheticId
                  in: path
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "200":
                    description: 200 response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Synthetic"
            security:
                - AdaApiAuthorizer: []
                - api_key: []
components:
    schemas:
        PostTokenResponse:
            type: object
            properties:
                access_token:
                    type: string
                    description: Bearer token to pass to all subsequent requests
                expires_in:
                    type: number
                    description: The time, in seconds, from the time of request before the token expires
                token_type:
                    type: string
        GetVinScheduleResponse:
            type: object
            required:
                - vin
            properties:
                vin:
                    type: string
                startup:
                    type: object
                    properties:
                        starting:
                            description: unix timestamp indicating when the schedule begins
                            type: number
                        id:
                            type: number
                            description: policy ID
        GetVinLastKnownResponse:
            type: object
            required:
                - Items
            properties:
                Items:
                    type: array
                    items:
                        $ref: "#/components/schemas/VinLastKnown"
        GetVinDataResponse:
            type: object
            required:
                - Items
            properties:
                Items:
                    type: array
                    items:
                        $ref: "#/components/schemas/VinData"
        VinData:
            type: object
            properties:
                vin:
                    type: string
                policy:
                    type: number
                app_timestamp:
                    type: string
                data:
                    type: object
        VinLastKnown:
            type: object
            required:
                - vin
                - value
                - signal
                - timestamp
            properties:
                vin:
                    type: string
                value:
                    type: string
                signal:
                    type: string
                timestamp:
                    type: string
        OnDemandRequest:
            type: array
            items:
                $ref: "#/components/schemas/PolicyVinRequest"
        GetHistogramsResponse:
            type: object
            required:
                - Items
            properties:
                Items:
                    type: array
                    items:
                        $ref: "#/components/schemas/Histogram"
        GetSensorsResponse:
            type: object
            required:
                - Items
            properties:
                Items:
                    type: array
                    items:
                        $ref: "#/components/schemas/Sensor"
        GetIamPoliciesReponse:
            type: object
            properties:
                PolicyName:
                    type: string
                PolicyId:
                    type: string
                Arn:
                    type: string
                Path:
                    type: string
                DefaultVersionId:
                    type: string
                AttachmentCount:
                    type: number
                PermissionsBoundaryUsageCount:
                    type: number
                IsAttachable:
                    type: boolean
                CreateDate:
                    type: string
                    format: date-time
                UpdateDate:
                    type: string
                    format: date-time
        UserSearchResponse:
            type: object
            required:
                - data
                - pageInfo
            properties:
                data:
                    type: array
                    items:
                        $ref: "#/components/schemas/User"
                pageInfo:
                    $ref: "#/components/schemas/PageInfo"
        VinSearchResponse:
            type: object
            required:
                - data
                - pageInfo
            properties:
                data:
                    type: array
                    items:
                        $ref: "#/components/schemas/VinProfile"
                pageInfo:
                    $ref: "#/components/schemas/PageInfo"
        PolicySearchResponse:
            type: object
            required:
                - data
                - pageInfo
            properties:
                data:
                    type: array
                    items:
                        oneOf:
                            - $ref: "#/components/schemas/AdaJsonPolicy"
                            - $ref: "#/components/schemas/AdaProtobufPolicy"
                pageInfo:
                    $ref: "#/components/schemas/PageInfo"
        CreatePolicyRequest:
            type: object
            required:
                - pname
                - grp_id
                - plans
            properties:
                pname:
                    type: string
                grp_id:
                    type: number
                renew:
                    type: number
                    x-ada-units: ms
                backup_window:
                    type: number
                delay:
                    type: number
                plans:
                    type: array
                    items:
                        oneOf:
                            - $ref: "#/components/schemas/AdaProtobufPlan"
                            - $ref: "#/components/schemas/AdaJsonPlan"
        UpdatePolicyRequest:
            type: array
            items:
                required:
                    - id
                type: object
                properties:
                    id:
                        type: integer
                        format: int32
                    pname:
                        type: string
                    fname:
                        type: string
        Sensor:
            type: object
            required:
                - componentname
                - source
            properties:
                servicetype:
                    type: string
                maxbuf:
                    type: string
                resoluions:
                    type: string
                dataTypes:
                    type: string
                prop:
                    type: array
                    items:
                        type: string
                source:
                    $ref: "#/components/schemas/SensorType"
                conditionpush:
                    type: string
                isAvailable:
                    type: string
                descriptn:
                    type: string
                state:
                    type: array
                    items:
                        type: string
                avglen:
                    type: string
                ppsSource:
                    type: string
                channelNames:
                    type: string
                minabsranges:
                    type: string
                componentname:
                    type: string
                contextType:
                    type: string
                iswritable:
                    type: string
                ppsattributes:
                    type: string
                channelNos:
                    type: string
                maxabsranges:
                    type: string
                type:
                    type: string
        SensorType:
            type: string
            enum:
                - kona
                - location
                - clock
                - napi
        Role:
            type: object
            properties:
                Path:
                    type: string
                RoleName:
                    type: string
                RoleId:
                    type: string
                Arn:
                    type: string
                CreateDate:
                    type: string
                    format: date-time
                AssumeRolePolicyDocument:
                    type: string
                Tags:
                    type: array
                    items:
                        type: string
        User:
            type: object
            properties:
                oid:
                    type: string
                cognito_username:
                    type: string
                given_name:
                    type: string
                family_name:
                    type: string
                email:
                    type: string
                is_email_verified:
                    type: boolean
                created_timestamp:
                    type: string
                updated_timestamp:
                    type: string
                is_user_enabled:
                    type: boolean
                user_status:
                    type: string
        Group:
            type: object
            required:
                - name
            properties:
                name:
                    type: string
                description:
                    type: string
                operations:
                    type: array
                    items:
                        type: string
        SendLivePolicyRequest:
            type: object
            required:
                - plan
            properties:
                plan:
                    $ref: "#/components/schemas/AdaJsonPlan"
        CreateGroupRequest:
            type: object
            required:
                - groupName
                - operations
            properties:
                groupName:
                    type: string
                operations:
                    type: array
                    items:
                        type: string
        CreateUserRequest:
            type: object
            required:
                - userName
                - email
            properties:
                userName:
                    type: string
                email:
                    type: string
                temporaryPassword:
                    type: string
        CreateHistogramRequest:
            required:
                - name
            type: object
            properties:
                histoname:
                    type: string
                type:
                    type: string
                    enum:
                        - custom
                        - telematic
                signals:
                    type: array
                    items:
                        $ref: "#/components/schemas/HistogramSignal"
        AssignPolicyRequest:
            type: object
            properties:
                assignPolicyRequests:
                    type: array
                    items:
                        $ref: "#/components/schemas/PolicyVinRequest"
        UpdateVinFeaturesRequest:
            type: object
            properties:
                updateFeatureRequest:
                    type: array
                    items:
                        $ref: "#/components/schemas/VinFeatureRequest"
        VinFeatureRequest:
            type: object
            properties:
                vin:
                    type: string
                    maxLength: 17
                featureRequests:
                    type: array
                    items:
                        $ref: "#/components/schemas/FeatureRequest"
        FeatureRequest:
            type: object
            properties:
                source:
                    type: string
                    maxLength: 64
                features:
                    type: array
                    items:
                        $ref: "#/components/schemas/Feature"
                    maxLength: 1000
        Feature:
            type: object
            properties:
                name:
                    type: string
                    maxLength: 64
                expiryDate:
                    type: string
        PolicyVinRequest:
            type: object
            properties:
                policy:
                    type: integer
                    format: int32
                    maximum: 9999999
                vins:
                    type: array
                    items:
                        type: string
                        example: EXAMPLEVIN123
        SearchRequest:
            type: object
            properties:
                pageSize:
                    type: integer
                    format: int32
                    maximum: 500
                page:
                    type: string
                filterExpression:
                    $ref: "#/components/schemas/FilterExpression"
        FilterExpression:
            type: object
            properties:
                field:
                    type: object
                    properties:
                        EQUALS:
                            type: string
                        CONTAINS:
                            type: string
        UpdateVinProfileRequest:
            required:
                - vin
            type: object
            properties:
                vin:
                    type: string
                    maxLength: 17
                    example: EXAMPLEVIN123
                policyId:
                    type: integer
                    format: int32
                    maximum: 9999999
                expirationDateExtend:
                    type: integer
                    format: int32
                notifications:
                    type: boolean
        PageInfo:
            type: object
            properties:
                totalItems:
                    type: integer
                    format: int32
                lastPageKey:
                    type: object
                    properties:
                        fieldKey:
                            type: string
        BatchVinOperationResultResponse:
            type: object
            properties:
                updatedItems:
                    type: array
                    items:
                        $ref: "#/components/schemas/SingleVinOperationResultResponse"
                failedItems:
                    type: array
                    items:
                        $ref: "#/components/schemas/SingleVinOperationResultResponse"
        SingleVinOperationResultResponse:
            type: object
            required:
                - vin
                - status
            properties:
                vin:
                    type: string
                    maxLength: 17
                    example: EXAMPLEVIN123
                status:
                    enum:
                        - Success
                        - Failed
                    example: Success
                message:
                    type: string
        BatchPolicyOperationResultResponse:
            type: object
            properties:
                updatedItems:
                    type: array
                    items:
                        $ref: "#/components/schemas/SinglePolicyOperationResultResponse"
                failedItems:
                    type: array
                    items:
                        $ref: "#/components/schemas/SinglePolicyOperationResultResponse"
        SinglePolicyOperationResultResponse:
            type: object
            properties:
                id:
                    type: number
                    format: int32
                    maximum: 9999999
                status:
                    enum:
                        - Success
                        - Failed
                    example: Success
                message:
                    type: string
        GetSyntheticsResponse:
            type: object
            required:
                - Items
            properties:
                Items:
                    type: array
                    items:
                        $ref: "#/components/schemas/Synthetic"
        CreateSyntheticRequest:
            required:
                - name
            type: object
            properties:
                param:
                    type: string
                source:
                    type: string
                    enum:
                        - synth
                operator:
                    $ref: "#/components/schemas/Operator"
                operands:
                    type: array
                    items:
                        $ref: "#/components/schemas/AdaElement"
        GetGroupsResponse:
            type: object
            required:
                - data
            properties:
                data:
                    type: array
                    items:
                        $ref: "#/components/schemas/Group"
        VinProfile:
            type: object
            required:
                - vin
            properties:
                estimatedNextCheckIn:
                    type: string
                    format: date
                id:
                    type: number
                last_check_in:
                    type: string
                    format: date
                exp_date_extend:
                    type: number
                exp_date:
                    type: string
                    format: date
                last_check_in_source:
                    type: string
                last_check_in_region:
                    type: string
                vendor:
                    type: string
        AdaProtobufPolicy:
            type: object
            required:
                - id
                - grp_id
                - pname
                - plans
            properties:
                id:
                    type: number
                grp_id:
                    type: number
                pname:
                    type: string
                fname:
                    type: string
                renew:
                    type: number
                    x-ada-units: ms
                backup_window:
                    type: number
                delay:
                    type: number
                plans:
                    type: array
                    items:
                        $ref: "#/components/schemas/AdaProtobufPlan"
        AdaProtobufPlan:
            type: object
            properties:
                type:
                    $ref: "#/components/schemas/ProtobufPlanType"
                period:
                    type: number
                bundle_window:
                    type: number
                transfer_window:
                    type: number
                data:
                    type: array
                    items:
                        $ref: "#/components/schemas/AdaElement"
                filter:
                    $ref: "#/components/schemas/AdaElement"
                flags:
                    type: array
                    items:
                        $ref: "#/components/schemas/Flag"
                compress_threshold:
                    type: number
                backup_window:
                    type: number
                delay:
                    type: number
        ProtobufPlanType:
            type: string
            enum:
                - poll
                - onchange
                - timeseries
                - timeseries-onchange
        AdaJsonPolicy:
            type: object
            required:
                - id
                - grp_id
                - pname
                - plans
            properties:
                id:
                    type: number
                grp_id:
                    type: number
                pname:
                    type: string
                fname:
                    type: string
                renew:
                    type: number
                    x-ada-units: ms
                backup_window:
                    type: number
                delay:
                    type: number
                plans:
                    type: array
                    items:
                        $ref: "#/components/schemas/AdaJsonPlan"
        AdaJsonPlan:
            type: object
            required:
                - type
            properties:
                type:
                    $ref: "#/components/schemas/JsonPlanType"
                period:
                    type: number
                    x-ada-units: ms
                transfer_window:
                    type: number
                signals:
                    type: array
                    items:
                        $ref: "#/components/schemas/Signal"
                histograms:
                    type: array
                    items:
                        $ref: "#/components/schemas/Histogram"
                event:
                    type: array
                    items:
                        $ref: "#/components/schemas/Event"
                title:
                    type: string
                lbtntext:
                    type: string
                rbtntext:
                    type: string
        Signal:
            type: object
            required:
                - name
                - type
            properties:
                name:
                    type: string
                type:
                    $ref: "#/components/schemas/PropertyType"
                subtype:
                    type: string
        PropertyType:
            type: string
            enum:
                - kona
                - location
                - clock
                - diag
                - command
                - histogram
        Histogram:
            required:
                - histoid
                - histoname
            type: object
            properties:
                histoid:
                    type: number
                histoname:
                    type: string
                multiDimensional:
                    type: boolean
                signals:
                    type: array
                    items:
                        $ref: "#/components/schemas/HistogramSignal"
                reset:
                    type: number
                created_timestamp:
                    type: number
                rangeCount:
                    type: number
                type:
                    $ref: "#/components/schemas/HistogramType"
        HistogramType:
            type: string
            enum:
                - custom
                - telematic
        HistogramSignal:
            type: object
            properties:
                name:
                    type: string
                type:
                    $ref: "#/components/schemas/HistogramSignalType"
                ranges:
                    type: array
                    items:
                        $ref: "#/components/schemas/HistogramBin"
                subsignals:
                    type: array
                    items:
                        $ref: "#/components/schemas/HistogramSignal"
        HistogramBin:
            type: object
            properties:
                min:
                    type: number
                max:
                    type: number
        HistogramSignalType:
            type: string
            enum:
                - sensor
        Event:
            type: object
            properties:
                comparators:
                    type: array
                    items:
                        $ref: "#/components/schemas/EventComparators"
                compareToSignals:
                    type: array
                    items:
                        type: string
                compareType:
                    type: array
                    items:
                        type: string
                signalName:
                    type: string
                signalType:
                    type: string
                threshold:
                    type: array
                    items:
                        type: string
        EventComparators:
            type: string
            enum:
                - ">"
                - "<"
                - "="
                - "<="
                - ">="
        JsonPlanType:
            type: string
            enum:
                - poll
                - event
                - popup
        AdaElement:
            type: object
            properties:
                param:
                    type: string
                source:
                    $ref: "#/components/schemas/Source"
                name:
                    type: string
                flags:
                    type: array
                    items:
                        $ref: "#/components/schemas/Flag"
                pre_event_window:
                    type: number
                post_event_window:
                    type: number
        Flag:
            type: string
            enum:
                - onchange
                - persist
                - reset
                - compress
                - encrypt
        Synthetic:
            type: object
            required:
                - synthid
                - param
            properties:
                synthid:
                    type: number
                name:
                    type: string
                param:
                    type: string
                source:
                    type: string
                    enum:
                        - synth
                operator:
                    $ref: "#/components/schemas/Operator"
                operands:
                    type: array
                    items:
                        $ref: "#/components/schemas/AdaElement"
                createdTimeStamp:
                    type: number
        Source:
            type: string
            enum:
                - napi
                - const
                - diag
                - synth
                - command
                - location
                - kona
                - cust-histo
                - persist
                - os-histo
                - timeseries
                - popup
        Operator:
            type: string
            enum:
                - ADD
                - SUB
                - MUL
                - NEG
                - DIV
                - MOD
                - LT
                - LTE
                - EQ
                - GTE
                - GT
                - NEQ
                - AND
                - OR
                - NOT
                - LSHIFT
                - RSHIFT
                - BITAND
                - BITOR
                - BITNOT
                - BITXOR
                - STRCMP
                - STRLEN
                - BYTE_AT
                - XOR
    securitySchemes:
        AdaApiAuthorizer:
            type: apiKey
            name: Authorization
            in: header
            x-amazon-apigateway-authtype: custom
        api_key:
            type: apiKey
            name: x-api-key
            in: header
        basic_auth:
            type: http
            scheme: basic
